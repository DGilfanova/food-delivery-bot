version: '3.1'

services:
  postgres:
    container_name: food-delivery-bot-db
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_DB: food-delivery-bot-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - food-delivery-bot-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: bitnami/kafka:3.3.1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://localhost:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/bitnami/kafka/config/kafka_jaas.conf"


    volumes:
      - ./kafka_server_jaas.conf:/opt/bitnami/kafka/config/kafka_jaas.conf:ro
    depends_on:
      - zookeeper

volumes:
  food-delivery-bot-db-data:
