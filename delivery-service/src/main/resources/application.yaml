spring:
  application:
    name: delivery-service
  profiles:
    default: ${ENV:local}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PG_MASTER_HOST}:${PG_MASTER_PORT}/${PG_DB_NAME}
    username: ${PG_USERNAME}
    password: ${PG_PASSWORD}
  liquibase:
    changeLog: classpath:/db/changelog/changelog-master.yml
    enabled: ${LIQUIBASE_ENABLED}
  batch:
    jdbc:
      initialize-schema: always

kafka:
  get-courier-location:
    servers: ${KAFKA_GET_COURIER_LOCATION_SERVERS}
    login: ${KAFKA_GET_COURIER_LOCATION_LOGIN}
    password: ${KAFKA_GET_COURIER_LOCATION_PASSWORD}
    topic: ${KAFKA_GET_COURIER_LOCATION_TOPIC}
    sasl-mechanism: PLAIN
    security: org.apache.kafka.common.security.plain.PlainLoginModule
    security-protocol: PLAINTEXT
  send-courier-location:
    servers: ${KAFKA_SEND_COURIER_LOCATION_SERVERS}
    login: ${KAFKA_SEND_COURIER_LOCATION_LOGIN}
    password: ${KAFKA_SEND_COURIER_LOCATION_PASSWORD}
    topic: ${KAFKA_SEND_COURIER_LOCATION_TOPIC}
    sasl-mechanism: PLAIN
    security: org.apache.kafka.common.security.plain.PlainLoginModule
    security-protocol: PLAINTEXT

telegram-bot:
  token: ${TELEGRAM_BOT_TOKEN}
